/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab_final_edd1;

import java.awt.Image;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static lab_final_edd1.Lab_Final_EDD1.leertxt;

/**
 *
 * @author Darwin
 */
public class Interfaz extends javax.swing.JFrame {

    int cont = 0;
    int turno = 1;
    ListaCampo tablero = new ListaCampo();

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        //Hacer fichas visibles dependiendo la cantidad de jugadores
        switch (Variables.njugadores) {
            case 2:
                azul.setVisible(false);
                verde.setVisible(false);
                break;
            case 3:
                azul.setVisible(false);
                break;
        }
        
        leertxt("txtPropiedades", tablero);
        setSize(1366, 720);
        ImageIcon wallpaper = new ImageIcon("src/Data1/monopolio.png");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_wallpaper.getWidth(), jLabel_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_wallpaper.setIcon(icono);
        this.repaint();
        transparenciaButton();

    }

    @SuppressWarnings("unchecked")
    public void transparenciaButton() {
        dadoBtn.setOpaque(false);
        dadoBtn.setContentAreaFilled(false);
        dadoBtn.setBorderPainted(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dadoBtn = new javax.swing.JButton();
        rojo = new javax.swing.JLabel();
        amarilla = new javax.swing.JLabel();
        azul = new javax.swing.JLabel();
        verde = new javax.swing.JLabel();
        jLabel_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dadoBtnActionPerformed(evt);
            }
        });
        getContentPane().add(dadoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 50, 310, 70));

        rojo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Data1/rojo.png"))); // NOI18N
        getContentPane().add(rojo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 600, 40, 70));

        amarilla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Data1/amarillo.png"))); // NOI18N
        getContentPane().add(amarilla, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 600, 40, 80));

        azul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Data1/azul.png"))); // NOI18N
        getContentPane().add(azul, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 600, -1, -1));

        verde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Data1/verde.png"))); // NOI18N
        getContentPane().add(verde, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 610, -1, -1));

        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Data1/monopolio.png"))); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dadoBtnActionPerformed
        int dado1;
        int dado2;//dado2
        int dado;
        switch (turno) {
            case 1:

                

                if (Variables.jugador1.turno == 1) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, rojo, Variables.jugador1);
                    tablero.buscarn(Variables.jugador1);
                    
                }
                if (Variables.jugador2.turno == 1) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, amarilla, Variables.jugador2);
                    tablero.buscarn(Variables.jugador2);
                }
                if (Variables.jugador3.turno == 1) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, verde, Variables.jugador3);
                    tablero.buscarn(Variables.jugador3);
                }
                if (Variables.jugador4.turno == 1) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, azul, Variables.jugador4);
                    tablero.buscarn(Variables.jugador4);
                }

                break;
            case 2:
                if (Variables.jugador1.turno == 2) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, rojo, Variables.jugador1);
                    tablero.buscarn(Variables.jugador1);
                }
                if (Variables.jugador2.turno == 2) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, amarilla, Variables.jugador2);
                    tablero.buscarn(Variables.jugador2);
                }
                if (Variables.jugador3.turno == 2) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, verde, Variables.jugador3);
                    tablero.buscarn(Variables.jugador3);
                }
                if (Variables.jugador4.turno == 2) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, azul, Variables.jugador4);
                    tablero.buscarn(Variables.jugador4);
                }
                break;
            case 3:
                if (Variables.jugador1.turno == 3) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, rojo, Variables.jugador1);
                    tablero.buscarn(Variables.jugador1);
                    
                }
                if (Variables.jugador2.turno == 3) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, amarilla, Variables.jugador2);
                    tablero.buscarn(Variables.jugador2);
                }
                if (Variables.jugador3.turno == 3) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, verde, Variables.jugador3);
                    tablero.buscarn(Variables.jugador3);
                }
                if (Variables.jugador4.turno == 3) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, azul, Variables.jugador4);
                    tablero.buscarn(Variables.jugador4);
                }
                break;
            case 4:
                if (Variables.jugador1.turno == 4) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, rojo, Variables.jugador1);
                    tablero.buscarn(Variables.jugador1);
                }
                if (Variables.jugador2.turno == 4) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, amarilla, Variables.jugador2);
                    tablero.buscarn(Variables.jugador2);
                }
                if (Variables.jugador3.turno == 4) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, verde, Variables.jugador3);
                    tablero.buscarn(Variables.jugador3);
                }
                if (Variables.jugador4.turno == 4) {
                    dado1 = (int) ((Math.random()) * 60 / 10) + 1;//dado 1
                    dado2 = (int) ((Math.random()) * 60 / 10) + 1;//dado2
                    dado = dado1 + dado2;
                    dados(dado1, dado2);
                    mover(dado, azul, Variables.jugador4);
                    tablero.buscarn(Variables.jugador4);
                }
                break;
        }
        turno++;
        if (turno == Variables.njugadores + 1) {
            turno = 1;
        }
    }//GEN-LAST:event_dadoBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amarilla;
    private javax.swing.JLabel azul;
    private javax.swing.JButton dadoBtn;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JLabel rojo;
    private javax.swing.JLabel verde;
    // End of variables declaration//GEN-END:variables

    // metodo para los dados 
    public void dados(int dado1, int dado2) {
        ImageIcon icono = null;

        switch (dado1) { // ver las combinaciones 
            case 1:
                switch (dado2) {
                    case 1:
                        icono = new ImageIcon(getClass().getResource("/dados/1,1.png"));
                        break;
                    case 2:
                        icono = new ImageIcon(getClass().getResource("/dados/1,2.png"));
                        break;
                    case 3:
                        icono = new ImageIcon(getClass().getResource("/dados/1,3.png"));
                        break;
                    case 4:
                        icono = new ImageIcon(getClass().getResource("/dados/1,4.png"));
                        break;
                    case 5:
                        icono = new ImageIcon(getClass().getResource("/dados/1,5.png"));
                        break;
                    case 6:
                        icono = new ImageIcon(getClass().getResource("/dados/1,6.png"));
                        break;
                }
                break;
            case 2:
                switch (dado2) {
                    case 1:
                        icono = new ImageIcon(getClass().getResource("/dados/2,1.png"));
                        break;
                    case 2:
                        icono = new ImageIcon(getClass().getResource("/dados/2,2.png"));
                        break;
                    case 3:
                        icono = new ImageIcon(getClass().getResource("/dados/2,3.png"));
                        break;
                    case 4:
                        icono = new ImageIcon(getClass().getResource("/dados/2,4.png"));
                        break;
                    case 5:
                        icono = new ImageIcon(getClass().getResource("/dados/2,5.png"));
                        break;
                    case 6:
                        icono = new ImageIcon(getClass().getResource("/dados/2,6.png"));
                        break;
                }
                break;
            case 3:
                switch (dado2) {
                    case 1:
                        icono = new ImageIcon(getClass().getResource("/dados/3,1.png"));
                        break;
                    case 2:
                        icono = new ImageIcon(getClass().getResource("/dados/3,2.png"));
                        break;
                    case 3:
                        icono = new ImageIcon(getClass().getResource("/dados/3,3.png"));
                        break;
                    case 4:
                        icono = new ImageIcon(getClass().getResource("/dados/3,4.png"));
                        break;
                    case 5:
                        icono = new ImageIcon(getClass().getResource("/dados/3,5.png"));
                        break;
                    case 6:
                        icono = new ImageIcon(getClass().getResource("/dados/3,6.png"));
                        break;
                }
                break;
            case 4:
                switch (dado2) {
                    case 1:
                        icono = new ImageIcon(getClass().getResource("/dados/4,1.png"));
                        break;
                    case 2:
                        icono = new ImageIcon(getClass().getResource("/dados/4,2.png"));
                        break;
                    case 3:
                        icono = new ImageIcon(getClass().getResource("/dados/4,3.png"));
                        break;
                    case 4:
                        icono = new ImageIcon(getClass().getResource("/dados/4,4.png"));
                        break;
                    case 5:
                        icono = new ImageIcon(getClass().getResource("/dados/4,5.png"));
                        break;
                    case 6:
                        icono = new ImageIcon(getClass().getResource("/dados/4,6.png"));
                        break;
                }
                break;
            case 5:
                switch (dado2) {
                    case 1:
                        icono = new ImageIcon(getClass().getResource("/dados/5,1.png"));
                        break;
                    case 2:
                        icono = new ImageIcon(getClass().getResource("/dados/5,2.png"));
                        break;
                    case 3:
                        icono = new ImageIcon(getClass().getResource("/dados/5,3.png"));
                        break;
                    case 4:
                        icono = new ImageIcon(getClass().getResource("/dados/5,4.png"));
                        break;
                    case 5:
                        icono = new ImageIcon(getClass().getResource("/dados/5,5.png"));
                        break;
                    case 6:
                        icono = new ImageIcon(getClass().getResource("/dados/5,6.png"));
                        break;
                }
                break;
            case 6:
                switch (dado2) {
                    case 1:
                        icono = new ImageIcon(getClass().getResource("/dados/6,1.png"));
                        break;
                    case 2:
                        icono = new ImageIcon(getClass().getResource("/dados/6,2.png"));
                        break;
                    case 3:
                        icono = new ImageIcon(getClass().getResource("/dados/6,3.png"));
                        break;
                    case 4:
                        icono = new ImageIcon(getClass().getResource("/dados/6,4.png"));
                        break;
                    case 5:
                        icono = new ImageIcon(getClass().getResource("/dados/6,5.png"));
                        break;
                    case 6:
                        icono = new ImageIcon(getClass().getResource("/dados/6,6.png"));
                        break;
                }
                break;
        }
        JOptionPane.showMessageDialog(null, "", "DADOS", JOptionPane.PLAIN_MESSAGE, icono);
    }

    // metodo para mover el jugador, error con player 
    public void mover(int dado, JLabel rojo, Jugadores a) {
        //MOVIMIENTO DE UNA FICHA
        if ((a.posicion + dado >= 11 && a.posicion < 19) && a.posicion <= 10) { //para cuando dé la primera vuelta
            if (a.posicion + dado != 11) {
                do {
                    a.posicion++;
                    dado--;
                } while (a.posicion != 11);
            }
            //Si casualmente cae en 11 ya se situe acá
            a.x = 35;
            a.y = 540;
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if ((a.posicion + dado >= 21 && a.posicion < 29) && (a.posicion <= 19 && a.posicion > 10)) { //Para cuando de la primer vuelta
            if (a.posicion + dado != 21) {
                do {
                    a.posicion++;
                    dado--;

                } while (a.posicion != 21);
            }
            //Si casualmente cae en 21 ya se situe acá
            a.x = 90;
            a.y = 40;
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if ((a.posicion + dado >= 31 && a.posicion < 39) && (a.posicion <= 29 && a.posicion > 20)) {
            if (a.posicion + dado != 31) {
                do {
                    a.posicion++;
                    dado--;
                } while (a.posicion != 31);
            }
            a.x = 585;
            a.y = 95;
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if ((a.posicion + dado >= 41) && (a.posicion <= 39 && a.posicion > 30)) {
            if (a.posicion + dado != 41) {
                do {
                    a.posicion++;
                    dado--;
                } while (a.posicion != 41);

            }
            a.posicion = 1;
            a.x = 585 - 55;
            a.y = 603;
            rojo.setBounds(a.x, a.y, 35, 57);
            JOptionPane.showMessageDialog(null, "Gana 200");
        }

        a.posicion = a.posicion + dado; //Ya suma la pos del jugador con el dado
        if (a.posicion >= 0 && a.posicion <= 9) { //Si cae entre la a la 9
            a.x = a.x - (55 * dado);//mover x 55 pixeles
            rojo.setBounds(a.x, a.y, 35, 57);

        }
        if (a.posicion == 10) { // Si cae en la 10
            a.x = 35;
            rojo.setBounds(a.x, a.y, 35, 57);

        }
        if (a.posicion >= 12 && a.posicion <= 19) { //Si cae en la 12 a 19
            a.y = a.y - (55 * dado);
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if (a.posicion == 20) { //Si cae en la 20
            a.x = 35;
            a.y = 40;
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if (a.posicion >= 22 && a.posicion <= 29) { //Si cae de la 22 a la 29
            a.x = a.x + (55 * dado);
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if (a.posicion == 30) {
            a.x = 585;
            a.y = 40;
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if (a.posicion >= 32 && a.posicion <= 39) { //Si cae de la 32 a la 39
            a.y = a.y + (55 * dado);
            rojo.setBounds(a.x, a.y, 35, 57);
        }
        if (a.posicion == 40) {
            a.posicion = 0;
            a.x = 585;
            a.y = 603;
            rojo.setBounds(a.x, a.y, 35, 57);
            JOptionPane.showMessageDialog(null, "Gana 200");
        }

    }

}
